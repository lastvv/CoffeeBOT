class Database:
    def __init__(self):
        self.item_data = [
            {
                'name': 'Lavazza («Лавацца»)',
                'description': '«Лавацца» добилась недостижимого для большинства марок '
                               '— их продукт заполнил все существующие ниши. Компания предлагает кофе и '
                               'кофе-машины для офисов, и нет в современных офисных центрах напитка популярнее.',
                'count': 2000
            },
            {
                'name': 'Чёрная карта',
                'description': 'Выпущенная впервые в 2008 году «Чёрная карта» уже в 2010 году входила'
                               'в тройку лидеров российского рынка кофе. Это произошло во многом'
                               ' благодаря дизайнерской подаче торговой марки:'
                               ' красно-чёрные керамические банки с оригинальной'
                               'конструкцией крышки запомнились сразу, а содержащийся в них кофе не разочаровал.',
                'count': 850
            },
            {
                'name': 'Carte Noire (Карт Нуар)',
                'description': 'Об этом кофе говорят, что у него французский шарм и немецкий характер,'
                               'но наибольшее количество поклонников бренда живёт в России. Поставки'
                               'Carte Noire в Российскую Федерацию и в самом деле превышают поставки '
                               'в родную бренду страну. Это объясняется не только разницей территорий '
                               'в России проживает людей вдвое больше,чем во Франции, но покупательским '
                               'интересом к торговой марке.',
                'count': 1400
            }
        ]


    def add_item(self, id: int, name: str, description: str, count: int):
        self.item_data.append(
            {
                'name': name,
                'description': description,
                'count': count
            }
        )

    def get_item(self, item_index):
        status = 'Ok'
        if item_index == 0:
            status = 'Small'
        elif item_index == len(self.item_data) - 1:
            status = 'Big'
        return status, self.item_data[item_index]